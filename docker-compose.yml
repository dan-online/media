version: "3.9"
name: jellyfin
services:
  # vpn:
  #   container_name: vpn
  #   image: qmcgaw/gluetun:latest
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #     - VPN_SERVICE_PROVIDER=protonvpn # Valid values: nordvpn, expressvpn, protonvpn, surfshark or custom
  #     - OPENVPN_USER=rTKjkxl2xNBpc1qo
  #     - OPENVPN_PASSWORD=tlwip8X6He8o1xwnwnCuMQPne0h7UvlT
  #     - SERVER_COUNTRIES=Netherlands
  #     - FREE_ONLY=on
  #     - DOT=off
  #     # - OPENVPN_FLAGS=--comp-lzo
  #     # - HEALTH_TARGET_ADDRESS=1.1.1.1:443
  #     # - VPN_SERVICE_PROVIDER=custom
  #     # - VPN_TYPE=wireguard
  #     # - VPN_ENDPOINT_IP=185.107.56.49
  #     # - VPN_ENDPOINT_PORT=51820
  #     # - WIREGUARD_PUBLIC_KEY=miiJL4putHojjkN0tOnNHu1/ae8rxvrBPCF47mqWnko=
  #     # - WIREGUARD_PRIVATE_KEY=2Osi/ZJ54hX3Jw1DwGgOEnDqw3cF9RFgyILpUq+W/lc=
  #     # # - WIREGUARD_PRESHARED_KEY=xOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=
  #     # - WIREGUARD_ADDRESSES=10.2.0.2/32

  #     ## For list of server regions and countries, visit https://raw.githubusercontent.com/qdm12/gluetun/master/internal/storage/servers.json

  #     ## SERVER_REGIONS is required for NordVPN and Surfshark VPN. Comment SERVER_COUNTRIES if SERVER_REGIONS is used.

  #     ## Enable below if VPN_SERVICE_PROVIDER=custom
  #     # - VPN_TYPE=openvpn # or wireguard. 

  #     ## If VPN_TYPE is openvpn
  #     # - OPENVPN_CUSTOM_CONFIG=/gluetun/custom.conf

  #     ## If VPN_TYPE is wireguard. Replace below env variables as required.
  #     # - VPN_ENDPOINT_IP=1.2.3.4                                               # Replace with your wg endpoint ip or domain
  #     # - VPN_ENDPOINT_PORT=51820                                               # Replace with wg server port
  #     # - WIREGUARD_PUBLIC_KEY=wAUaJMhAq3NFutLHIdF8AN0B5WG8RndfQKLPTEDHal0=     # Replace with your wg public key
  #     # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=    # Replace with your wg client private key
  #     # - WIREGUARD_PRESHARED_KEY=xOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=  # Replaced with your wg pre-shared key
  #     # - WIREGUARD_ADDRESSES="10.64.222.21/32"                                 # Replace with wg address

  #   ## Enable volume if custom VPN_SERVICE_PROVIDER is used
  #   # volumes:
  #     # - /yourpath/yourconfig.conf:/gluetun/config.conf:ro

  #   networks:
  #     - internal_network
  #   ports:
  #     # qbittorrent ports
  #     # - 5080:5080
  #     # - 6881:6881
  #     # - 6881:6881/udp
  #     # prowlarr ports
  #     - 9696:9696
  #     # Transmission ports. Uncomment below if Transmission is used with VPN
  #     - 9091:9091
  #     - 51413:51413
  #     - 51413:51413/udp
  #   restart: "unless-stopped"
  # vpn:
  #   container_name: wgcf
  #   image: neilpang/wgcf-docker:latest
  #   volumes:
  #     - ./warp:/wgcf
  #     - /lib/modules:/lib/modules
  #   sysctls:
  #     net.ipv6.conf.all.disable_ipv6: 0
  #   privileged: true
  #   cap_add:
  #     - NET_ADMIN
  #   networks:
  #     - internal_network
  #   command: "-4"
  #   ports:
  #     # qbittorrent ports
  #     # - 5080:5080
  #     # - 6881:6881
  #     # - 6881:6881/udp
  #     # prowlarr ports
  #     - 9696:9696
  #     # Transmission ports. Uncomment below if Transmission is used with VPN
  #     - 9091:9091
  #     - 51413:51413
  #     - 51413:51413/udp
  #   restart: "unless-stopped"
  #transmission:
  #  container_name: transmission
  #  image: linuxserver/transmission:4.0.3
  #  depends_on:
  #    - vpn
  #  network_mode: service:vpn
  #  environment:
  #    - PUID=1000
  #    - PGID=1000
  #    - TZ=UTC
  #    - USER=dancodes
  #    - PASS=DanCodesInRust@2023!
  #  volumes:
  #    - ./transmission/config:/config
  #    - downloads:/downloads
  #    - ./transmission/watch:/watch
  #  restart: "unless-stopped"

  # qbittorrent:
  #   container_name: qbittorrent
  #   image: linuxserver/qbittorrent:4.5.2
  #   depends_on:
  #     vpn:
  #      condition: service_healthy
  #   network_mode: service:vpn
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=UTC
  #     - WEBUI_PORT=5080
  #   volumes:
  #     - ./qbittorrent/config:/config
  #     - downloads:/downloads
  #   restart: "unless-stopped"

  radarr:
    container_name: radarr
    image: linuxserver/radarr:4.4.4
    networks:
      - internal_network
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - 7878:7878
    volumes:
      - ./radarr/config:/config
      - downloads:/downloads
    restart: "unless-stopped"

  sonarr:
    image: linuxserver/sonarr:4.0.0-develop
    container_name: sonarr
    networks:
      - internal_network
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./sonarr/config:/config
      - downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  jackett:
    container_name: jackett
    image: linuxserver/jackett:0.21.424
    networks:
      - internal_network
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./jackett/config:/config
      - ./jackett/blackhole:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
  # prowlarr:
  #   container_name: prowlarr
  #   image: linuxserver/prowlarr:1.4.1-develop
  #   depends_on:
  #     - vpn
  #   network_mode: service:vpn
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=UTC
  #   volumes:
  #     - ./prowlarr/config:/config
  #   restart: unless-stopped

  jellyfin:
    image: linuxserver/jellyfin:10.8.10
    container_name: jellyfin
    networks:
      - internal_network
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - JELLYFIN_PublishedServerUrl=media.dancodes.online
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin_web_intro_skip:/usr/share/jellyfin/web:ro
      - ./jellyfin/transcodes:/temp
      - downloads:/data
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 8920:8920
    restart: unless-stopped
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    network_mode: bridge
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
      # - 8267:8267 # Internal node port
    environment:
      - TZ=Europe/London
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - nodeName=MyInternalNode
    volumes:
      - ./tdarr/server:/app/server
      - ./tdarr/configs:/app/configs
      - ./tdarr/logs:/app/logs
      - downloads:/media
      - ./tdarr/transcode_cache:/temp
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    restart: unless-stopped
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./heimdall/config:/config
    ports:
      - 23552:80

volumes:
  tx-config:
  tx-watch:
  downloads:
    driver: rclone
    driver_opts:
      remote: 'Seedbox01:downloads'
      allow_other: 'true'
#      vfs_cache_mode: full
      poll_interval: 0

networks:
  internal_network: # external: true
