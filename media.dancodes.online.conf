upstream transmission  {
      server localhost:9091;
}

server {
    server_name media.dancodes.online;

    client_max_body_size 20M;

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/dancodes.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dancodes.online/privkey.pem;

    ###RADARR-PROXY###
    location /radarr {
        proxy_pass         http://localhost:7878;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $http_connection;
    }

   location /bazarr/ {
        proxy_pass              http://127.0.0.1:6767/bazarr/;
        proxy_set_header        X-Real-IP               $remote_addr;
        proxy_set_header        Host                    $http_host;
        proxy_set_header        X-Forwarded-For         $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto       $scheme;
        proxy_http_version      1.1;
        proxy_set_header        Upgrade                 $http_upgrade;
        proxy_set_header        Connection              "Upgrade";
        proxy_redirect off;
        # Allow the Bazarr API through if you enable Auth on the block above
        #location /bazarr/api {
        #    auth_request off;
        #proxy_pass http://127.0.0.1:6767/bazarr/api;
    	#}
    }

    ###JACKETT-PROXY###
    location /jackett {
	    proxy_pass         http://localhost:9117;
	    proxy_http_version 1.1;
	    proxy_set_header   Upgrade $http_upgrade;
	    proxy_set_header   Connection keep-alive;
	    proxy_cache_bypass $http_upgrade;
	    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header   X-Forwarded-Proto $scheme;
	    proxy_set_header   X-Forwarded-Host $http_host;
	    proxy_redirect off;
	    proxy_set_header   X-Forwarded-Uri $request_uri;
    }

    ###TRANSMISSION-PROXY###
    location ^~ /transmission {
      
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_set_header X-NginX-Proxy true;
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          proxy_pass_header X-Transmission-Session-Id;
          add_header   Front-End-Https   on;
      
          location /transmission/rpc {
              proxy_pass http://transmission;
          }
      
          location /transmission/web/ {
              proxy_pass http://transmission;
          }
      
          location /transmission/upload {
              proxy_pass http://transmission;
          }
          
          location /transmission {
              return 301 https://$host/transmission/web;
          }
    }

    ###JELLYFIN-PROXY###
    location /jellyfin {
        return 302 $scheme://$host/jellyfin/;
    }

    location /jellyfin/ {

        proxy_pass http://127.0.0.1:8096/jellyfin/;

        proxy_pass_request_headers on;

        proxy_set_header Host $host;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
	

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        proxy_set_header   X-Forwarded-Uri $request_uri;

        proxy_buffering    off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        chunked_transfer_encoding on;
    }

    ###SONAR_PROXY###
    location /sonarr {
        proxy_pass http://localhost:8989;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    # ###TDARR_PROXY###
    location /tdarr/ {
      	auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
	proxy_pass http://localhost:8265/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    location / {
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-Scheme $scheme;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://127.0.0.1:23552;
    }

    # location /tdarrnode/ {
    #     proxy_pass http://localhost:8267/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection $http_connection;
    # }

    # if none of these services were hit then redirect to /jellyfish
#    location / {
#        return 302 $scheme://$host/jellyfin/;
#    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}
